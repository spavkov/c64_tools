:JMP/JSR only
C474 $C474 - dispaly READY. message
CEF7 $CEF7 - check for right parenthasis ')'
CEFD $CEFD - check for comma ','
CEFA $CEFA - check for left parenthasis '('
D79B $D79B - get number in .X
D7F7 $D7F7 - convert FAC to 2 byte integer
E3A4 $E3A4 - init BASIC: restore CHRGET & zp pointers
E467 $E467 - warm start BASIC
E505 $E505 - get max number of screen columns
E50A $E50A - read or set cursor column and row
E518 $E518 - init VIC, screen and related pointers
E55F $E55F - clear the screen
E581 $E581 - home the cursor
E587 $E587 - reset screen line link table
E5BB $E5BB - reset default device numbers
E5C3 $E5C3 - reset VIC registers
E64F $E64F - get input from screen
E975 $E975 - scroll the screen
E9EE $E9EE - open a blank screen line
EA56 $EA56 - move a screen line
EA8D $EA8D - clear a screen line
EABF $EABF - IRQ interrupt handler
EB1E $EB1E - scan VIA2 for keypress
EBDC $EBDC - set keyboard decode table
EE14 $EE14 - serial: send talk w/attention
EE17 $EE17 - serial: send listen w/attention
EE1C $EE1C - serial: prep to send command w/attention
EE49 $EE49 - serial: send command or data
EEB4 $EEB4 - serial: set ST for timeout or dev. not present
EEC0 $EEC0 - serial: send secondary address after listen
EEC5 $EE5C - serial: clear attention
EECE $EECE - serial: send secondary addresss after talk
EEE4 $EEE4 - serial: send a byte
EEF6 $EEF6 - serial: send untalk
EF04 $EF04 - serial: send unlisten
EF19 $EF19 - serial: receive a byte
EF84 $EF84 - serial: set clock line high
EF8D $EF8D - serial: set clock line low
EF96 $EF96 - serial: delay one millisecond
F1F5 $F1F5 - routing fot get a character of input data
F20E $F20E - get character from input device
F27A $F27A - output character to output device
F2C7 $F2C7 - open .X file number channel for input
F309 $F309 - open .X file number channel for output
F34A $F34A - close logical file number in .A
F3EF $F3EF - abort all open files (no close)
F3F3 $F3F3 - abort all open channels
F40A $F40A - open a logical file
F542 $F642 - load(or verify) to RAM from current device
F675 $F675 - save RAM to current device
F77E $F77E - I/O file error messgae handler
FD22 $FD22 - power-on/reset routine
FD3F $FD3F - check for autostart catridge
FD52 $FD52 - reset system RAM vectors to default
FD57 $FD57 - read or set system RAM vectors
FD8D $FD8D - init system memory
FDF9 $FDF9 - init VIA registers
FE49 $FE49 - set filename
FE50 $FE50 - set file number, device & secondary address
FE73 $FE73 - read or set top of memory pointer
FE82 $FE82 - read or set bottom of memory pointer
FE91 $FE81 - test a memory location
FEA9 $FEA9 - NMI handler routine
FED2 $FED2 - break interrupt entry
FF72 $FF72 - IRQ routine initial 6502 entry point
FF81 $FF81 - init VIC & screen editor
FF84 $FF84 - initialize CIA & IRQ
FF87 $FF87 - RAM test & search RAM end
FF8A $FF8A - restore default I/O vectors
FF8D $FF8D - read/set I/O vectors
FF90 $FF90 - enable/disable KERNAL messages
FF93 $FF93 - send secondary addr after listen
FF96 $FF96 - send secondary addr after talk
FF99 $FF99 - read/set top of memory
FF9C $FF9C - read/set bottom of memory
FF9F $FF9F - scan keyboard
FFA2 $FFA2 - set IEEE timeout
FFA5 $FFA5 - input byte from SERIAL
FFA8 $FFA8 - output byte to SERIAL
FFAB $FFAB - untalk all SERIAL devices
FFAE $FFAE - unlisten all SERIAL devices
FFB1 $FFB1 - make SERIAL device listen
FFB4 $FFB4 - make SERIAL device talk
FFB7 $FFB7 - read I/O status byte
FFBA $FFBA - set file parameters
FFBD $FFBD - set file name
FFC0 $FFC0 - open log.file after SETLFS,SETNAM
FFC3 $FFC3 - close a logical file
FFC6 $FFC6 - open channel for input
FFC9 $FFC9 - open channel for output
FFCC $FFCC - restore default devices
FFCF $FFCF - input character
FFD2 $FFD2 - output character
FFD5 $FFD5 - load after call SETLFS,SETNAM
FFD8 $FFD8 - save after call SETLFS,SETNAM
FFDB $FFDB - set jiffy clock
FFDE $FFDE - read jiffy clock
FFE1 $FFE1 - check stop key
FFE4 $FFE4 - get a byte from channel
FFE7 $FFE7 - close or abort all files
FFEA $FFEA - update jiffy clock
FFED $FFED - return screen size
FFF0 $FFF0 - read/set cursor position
FFF3 $FFF3 - returns the addr of I/O devices
0300 $0300 (ind) - print BASIC error message from table
0302 $0302 (ind) - BASIC main routine
0304 $0304 (ind) - BASIC tokenization routine
0306 $0306 (ind) - BASIC expand & print token routine
0308 $0308 (ind) - execute next BASIC token
030A $030A (ind) - evaluate a BASIC variable
030C $030C - 6502 .A register
030D $030D - 6502 .X register
030E $030E - 6502 .Y register
030F $030F - 6502 .P processor status register
0314 $0314 (ind) - IRQ interrupt vector
0316 $0316 (ind) - BREAK interrupt vector
0318 $0318 (ind) - NMI interrupt vector
031A $031A (ind) - open log.file after SETLFS,SETNAM
031C $031C (ind) - close a logical file
031E $031E (ind) - open channel for input
0320 $0320 (ind) - open channel for output
0322 $0322 (ind) - restore default devices
0324 $0324 (ind) - input character
0326 $0326 (ind) - output character
0328 $0328 (ind) - check stop key
032A $032A (ind) - get a byte from channel
032C $032C (ind) - close or abort all files
032E $032E (ind) - unused vector
0330 $0330 (ind) - load after call SETLFS,SETNAM
0332 $0332 (ind) - save after call SETLFS,SETNAM

:ALL
9000 $9000 - left edge of picture & interlace switch
9001 $9001 - vertical picture origin
9002 $9002 - number of columns, part os screen map addr.
9003 $9003 - number of lines, part of raster location (bit 8)
9004 $9004 - raster beam location (bits 7-0)
9005 $9005 - screen map & character map address
9006 $9006 - light pen horizontal position
9007 $9007 - light pen vertical position
9008 $9008 - paddle X value
9009 $9009 - paddle Y value
900A $900A - frequency of sound osc.1 (bass)
900B $900B - frequency of sound osc.2 (alto)
900C $900C - frequency of sound osc.3 (soprano)
900D $900D - frequency of sound osc.4 (noise)
900E $900E - sound volume
900F $900F - screen colors: background, border & inverse
9110 $9110 - port b I/O register
9111 $9111 - port a I/O register
9112 $9112 - data direction register for port b
9113 $9113 - data direction register for port a
9114 $9114 - timer 1 (lsb) of count
9115 $9115 - timer 1 (msb) of count
9116 $9116 - timer 1 low order (lsb) latch
9117 $9117 - timer 1 high order (msb) latch
9118 $9118 - timer 2 low order (lsb) counter & latch
9119 $9119 - timer 2 high order (msb) counter & latch
911A $911A - shift register for parallel/serial conversion
911B $911B - aux. control register
911C $911C - peripheral control register for handshaking
911D $911D - interrupt flag register (IFR)
911E $911E - interrupt enable register (IER)
911F $911F - mirror of VIA1PA1 (CA1 & CA2 unaffected)
9120 $9120 - port b I/O register
9121 $9121 - port a I/O register
9122 $9122 - data direction register for port b
9123 $9123 - data direction register for port a
9124 $9124 - timer 1 (lsb) of count
9125 $9125 - timer 1 (msb) of count
9126 $9126 - timer 1 low order (lsb) latch
9127 $9127 - timer 1 high order (msb) latch
9128 $9128 - timer 2 low order (lsb) counter & latch
9129 $9129 - timer 2 high order (msb) counter & latch
912A $912A - shift register for parallel/serial conversion
912B $912B - aux. control register
912C $912C - peripheral control register for handshaking
912D $912D - interrupt flag register (IFR)
912E $912E - interrupt enable register (IER)
912F $912F - mirror of VIA1PA1 (CA1 & CA2 unaffected)
FFFA NMI
FFFB NMI
FFFC Hardware Reset
FFFD Hardware Reset
FFFE IRQ
FFFF IRQ
